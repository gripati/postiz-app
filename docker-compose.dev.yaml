version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    container_name: postiz-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postiz
      POSTGRES_PASSWORD: postizpwd
      POSTGRES_DB: postizdb
    volumes:
      - postgres-data:/var/lib/postgresql/data

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: postiz-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - BACKEND_INTERNAL_URL=http://localhost:3000
      - DATABASE_URL=postgresql://postiz:postizpwd@postgres:5432/postizdb
      - FRONTEND_URL=http://localhost:4200
      - IS_GENERAL=true
      - JWT_SECRET=8djsnfus6fbsbsbsd6d5fgater
      - MAIN_URL=http://localhost:4200
      - REDIS_URL=redis://redis:6379?family=0
      - SKIP_CONFIG_CHECK=true
      - STORAGE_PROVIDER=local
      - UPLOAD_DIRECTORY=/uploads
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    container_name: postiz-frontend
    ports:
      - "4200:4200"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BACKEND_URL=http://postiz-backend:3000
      - NEXT_PUBLIC_UPLOAD_DIRECTORY=/uploads
      - NEXT_PUBLIC_UPLOAD_STATIC_DIRECTORY=/uploads
    depends_on:
      - backend
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: postiz-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  postgres-data:
